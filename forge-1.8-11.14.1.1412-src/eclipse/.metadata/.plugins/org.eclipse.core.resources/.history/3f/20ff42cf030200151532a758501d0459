package purebe.battlemage.eventhandlers;

import net.minecraft.client.Minecraft;
import net.minecraft.client.renderer.Tessellator;
import net.minecraft.client.renderer.WorldRenderer;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.client.event.RenderGameOverlayEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

public class GuiEvents {
	@SubscribeEvent
	public void RenderGameOverlayEvent(RenderGameOverlayEvent event) {
		double posX = event.resolution.getScaledWidth() / 2;
		double posY = event.resolution.getScaledHeight() / 2;
		double height = 64;
		double width = 64;
		double zLevel = 100;
		double textureX = 0;
		double textureY = 0;
		
		Minecraft.getMinecraft().renderEngine.bindTexture(new ResourceLocation("battlemage:textures/gui/white_symbol.png"));
		//Minecraft.getMinecraft().ingameGUI.drawTexturedModalRect(posX, posY, 0, 0, 64, 64);
		
		Tessellator tessellator = Tessellator.getInstance();
        WorldRenderer worldrenderer = tessellator.getWorldRenderer();
        worldrenderer.startDrawingQuads();
        //worldrenderer.addVertexWithUV((double)(x + 0), (double)(y + height), (double)this.zLevel, (double)((float)(textureX + 0) * f), (double)((float)(textureY + height) * f1));
        //worldrenderer.addVertexWithUV((double)(x + width), (double)(y + height), (double)this.zLevel, (double)((float)(textureX + width) * f), (double)((float)(textureY + height) * f1));
        //worldrenderer.addVertexWithUV((double)(x + width), (double)(y + 0), (double)this.zLevel, (double)((float)(textureX + width) * f), (double)((float)(textureY + 0) * f1));
        //worldrenderer.addVertexWithUV((double)(x + 0), (double)(y + 0), (double)this.zLevel, (double)((float)(textureX + 0) * f), (double)((float)(textureY + 0) * f1));
        worldrenderer.addVertexWithUV(posX, posY + height, zLevel, textureX, textureY + height);
        worldrenderer.addVertexWithUV(posX + width, posY + height, zLevel, textureX + width, textureY + height);
        worldrenderer.addVertexWithUV(posX + width, posY, zLevel, textureX + width, textureY);
        worldrenderer.addVertexWithUV(posX, posY + height, zLevel, textureX, textureY + height);
        //worldrenderer.addVertexWithUV(x, y, z, u, v);
        //this.setTextureUV(u, v);
        //this.addVertex(x, y, z);
        tessellator.draw();
	}
}
