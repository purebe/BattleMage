package purebe.battlemage.magic;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Blocks;
import net.minecraft.util.BlockPos;
import net.minecraft.util.Vec3;
import purebe.battlemage.blocks.BattleMageBlocks;

public class MagicalWallSpell implements ISpell {
	final EntityPlayer     player;
	final Vec3             playerLookat;
	final int              intensity;

	public MagicalWallSpell(EntityPlayer player, Vec3 playerLookat) {
		this.player = player;
		this.playerLookat = playerLookat;
		this.intensity = 1;
	}
	
	@Override
	public void cast() {
		Vec3 playerPosition = player.getPositionVector().normalize();
		// This won't work properly if the player is looking up or down at extreme angles
		// such that there is less than 0.5 in x and z
		Vec3 wallPosition = new Vec3(player.posX + playerLookat.xCoord * 2,
                player.posY,
                player.posZ + playerLookat.zCoord * 2);
		
		Vec3 wallPositionNormalized = wallPosition.normalize();
		System.out.println("playerPosition: " + playerPosition);
		System.out.println("wallPosition: " + wallPosition);
		System.out.println("normalizedWallPosition: " + wallPositionNormalized);
		
		Vec3 facingDirection = wallPositionNormalized.subtract(player.getPositionVector());
		facingDirection = facingDirection.normalize();
		System.out.println("facingDirection: " + facingDirection);
		double dotProduct = wallPositionNormalized.dotProduct(playerPosition);
		Vec3 wallDirection;
		/*if (dotProduct > 0.25 &&
		    dotProduct < 0.75) {
			wallDirection = new Vec3(facingDirection.xCoord, 0, -facingDirection.zCoord);
		}
		else {
			wallDirection = new Vec3(-facingDirection.xCoord, 0, facingDirection.zCoord);
		}*/
		wallDirection = new Vec3(-facingDirection.xCoord, 0, facingDirection.zCoord);
		System.out.println("wallDirection: " + wallDirection);
		
		BlockPos wallPos;
		for (int i = 0; i < 3; ++i) {
			for (int k = -2; k < 3; ++k) {
				Vec3 blockPosition = wallPosition.addVector(k * wallDirection.xCoord, i , k * wallDirection.zCoord);
				wallPos = new BlockPos(blockPosition);
				System.out.println(blockPosition);
				if (player.worldObj.getBlockState(wallPos) == Blocks.air.getDefaultState()) {
					player.worldObj.setBlockState(wallPos, BattleMageBlocks.magicalWallBlock.getDefaultState());
					player.worldObj.scheduleUpdate(wallPos, BattleMageBlocks.magicalWallBlock, 5);
				}
			}
		}
	}
}
