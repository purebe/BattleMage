package purebe.battlemage.magic;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.BlockPos;
import net.minecraft.util.Vec3;

public class Teleport implements ISpell {
	final EntityPlayer     player;
	final Vec3             playerLookat;
	final int              intensity;
	final int              max_distance;
	final int              min_distance;
	final int              checkSize = 5;
	final int[]            checkPattern = { 0, 1, -1, 2, -2 };

	public Teleport(EntityPlayer player, Vec3 playerLookat) {
		this.player = player;
		this.playerLookat = playerLookat;
		this.intensity = 1;
		this.max_distance = 40;
		this.min_distance = 5;
	}
	
	@Override
	public void cast() {
		Vec3 telePosition = null;
		int randomMaxDistance = player.getRNG().nextInt(max_distance) + min_distance;
		for (int k = 0; k < checkSize; ++k) {
			for (int i = randomMaxDistance; i >= min_distance; --i) {
				telePosition = new Vec3(player.posX + playerLookat.xCoord * i,
				                       player.posY + checkPattern[k],
				                       player.posZ + playerLookat.zCoord * i);
				if (hasHeadroom(telePosition)) {
					player.setPositionAndUpdate(telePosition.xCoord, telePosition.yCoord, telePosition.zCoord);
					return;
				}
			}
		}
		System.out.println(player.getDisplayName().getFormattedText() + "'s teleport spell fizzled out.");
	}
	
	protected boolean hasHeadroom(Vec3 position) {
		BlockPos pos = new BlockPos((int)position.xCoord, (int)position.yCoord, (int)position.zCoord);
		if (!player.worldObj.getBlockState(pos).getBlock().isFullCube() ||
		    !player.worldObj.getBlockState(pos).getBlock().isOpaqueCube()) {
			if (!player.worldObj.getBlockState(pos.add(0, 1, 0)).getBlock().isFullCube() ||
			    !player.worldObj.getBlockState(pos.add(0, 1, 0)).getBlock().isOpaqueCube()) {
				return true;
			}
			else{
				System.out.println("No headroom at head level: " + pos.add(0, 1, 0));
			}
		}
		else {
			System.out.println("No headroom at leg level: " + pos);
		}
		return false;
	}
}
