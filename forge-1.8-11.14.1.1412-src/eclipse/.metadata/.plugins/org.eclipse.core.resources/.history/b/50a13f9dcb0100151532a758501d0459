package purebe.battlemage.magic;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import purebe.battlemage.main.Spells;
import purebe.battlemage.main.Spells.Spell;

public class SpellCaster {
	public enum SpellSymbol {
		White, Black, Chaos, Nature, Power
	}
	
	public final int MAX_SYMBOLS = 5;
	public final List<SpellSymbol> currentIncantation;
	
	public SpellCaster() {
		currentIncantation = new ArrayList<SpellSymbol>(5);
	}
	
	public boolean addSymbol(SpellSymbol symbol) {
		currentIncantation.add(symbol);
		return checkIncantation();
	}
	
	// Returns true if there is a completed spell incantation in the list,
	// or if it has reached the max number of symbols. Returns false otherwise.
	private boolean checkIncantation() {
		//for (ISpell spell : Spells.spells) {
		//	if (currentIncantation.equals(spell.getIncantation())) {
		//		//spell.cast();
		//		//Main.network.sendToServer(new CastSpellMsg(Spell.Illuminate));
		//		Main.network.sendToServer(new CastSpellMsg(Spell.Illuminate));
		//		currentIncantation.clear();
		//		return true;
		//	}
		//}
		/*Iterator it = mp.entrySet().iterator();
	    while (it.hasNext()) {
	        Map.Entry pair = (Map.Entry)it.next();
	        System.out.println(pair.getKey() + " = " + pair.getValue());
	        it.remove(); // avoids a ConcurrentModificationException
	    }*/
	    
	    Iterator it = Spells.spells.entrySet().iterator();
	    while (it.hasNext()) {
	    	Map.Entry<Spell, ISpell> pair = (Map.Entry)it.next();
	    	if (currentIncantation.equals((pair.getValue()).getIncantation())) {
	    		
	    	}
	    }
	    
		
		if (currentIncantation.size() >= MAX_SYMBOLS) {
			System.out.println(currentIncantation);
			currentIncantation.clear();
			System.out.println("Your spell fizzled out and nothing happened");
			return true;
		}
		return false;
	}
	
	public void clearSymbols() {
		System.out.println(currentIncantation);
		currentIncantation.clear();
		System.out.println("You wave your wand around and begin to cast a new spell!");
	}
}
